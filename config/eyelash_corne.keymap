#include <dt-bindings/zmk/mouse.h>
#include <input/processors.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

/*

   &mmv_input_listener {
       input-processors = <&zip_xy_scaler 2 1>;
   };

   &msc_input_listener {
       input-processors = <&zip_xy_scaler 2 1>;
   };

 */

#define ZMK_MOUSE_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20    // 10

/ {
    behaviors {
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <30>;
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "QWERTY";
            bindings = <
&kp ESCAPE  &kp Q  &kp W  &kp E              &kp R  &kp T                                                  &mmv MOVE_UP                     &kp Y                  &kp U  &kp I         &kp O    &kp P       &kp LBKT
&kp TAB     &kp A  &kp S  &kp D              &kp F  &kp G                                  &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp H                  &kp J  &kp K         &kp L    &lt 3 SEMI  &kp SQT
&kp LSHIFT  &kp Z  &kp X  &kp C              &kp V  &kp B                    &kp C_MUTE                    &mmv MOVE_DOWN                   &kp N                  &kp M  &kp COMMA     &kp DOT  &kp FSLH    &kp BSLH
                          &mt LGUI LEFT_GUI  &mo 1  &mt RIGHT_CONTROL SPACE                                                                 &mt RIGHT_SHIFT ENTER  &mo 2  &mt RALT DEL
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        lower_layer {
            display-name = "NUMBER";
            bindings = <
&trans  &kp N1   &kp N2   &kp N3  &kp N4  &kp N5                    &trans             &kp N6  &kp N7  &kp N8  &kp N9  &kp N0   &kp MINUS
&trans  &kp F1   &kp F2   &kp F3  &kp F4  &kp F5            &trans  &mkp RCLK  &trans  &kp F6  &kp F7  &kp F8  &kp F9  &kp F10  &trans
&trans  &kp F11  &kp F12  &trans  &trans  &trans  &trans            &trans             &trans  &trans  &trans  &trans  &trans   &trans
                          &trans  &trans  &trans                                       &trans  &mo 4   &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        raise_layer {
            display-name = "SYMBOL";
            bindings = <
&trans  &kp EXCL      &kp AT        &kp HASH   &kp DLLR   &kp PRCNT                            &mmv MOVE_UP                     &kp CARET  &kp AMPS   &kp ASTRK  &kp LPAR  &kp RPAR  &kp LS(MINUS)
&trans  &bt BT_CLR    &mkp LCLK     &mkp MCLK  &mkp RCLK  &mkp MB4             &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp MINUS  &kp EQUAL  &kp LBKT   &kp RBKT  &kp BSLH  &kp BSLH
&trans  &out OUT_USB  &out OUT_BLE  &none      &none      &mkp MB5   &trans                    &mmv MOVE_DOWN                   &kp UNDER  &kp PLUS   &kp LBRC   &kp RBRC  &kp PIPE  &kp LS(BSLH)
                                    &trans     &mo 4      &trans                                                                &trans     &trans     &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        layer_3 {
            display-name = "VI";
            bindings = <
&studio_unlock  &trans      &trans         &trans       &trans  &trans                            &mmv MOVE_UP                     &kp HOME  &kp PAGE_DOWN  &kp PAGE_UP  &kp END     &trans  &trans
&trans          &trans      &trans         &trans       &trans  &trans            &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp LEFT  &kp DOWN       &kp UP       &kp RIGHT   &trans  &trans
&trans          &sys_reset  &kp BACKSPACE  &bootloader  &trans  &trans  &trans                    &mmv MOVE_DOWN                   &trans    &trans         &bootloader  &sys_reset  &trans  &trans
                                           &trans       &trans  &trans                                                             &trans    &trans         &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        layer_4 {
            bindings = <
&kp LC(LA(DELETE))  &bt BT_SEL 0     &bt BT_SEL 1    &bt BT_SEL 2   &bt BT_SEL 3      &bt BT_SEL 4                         &trans          &bl BL_TOG  &trans          &trans  &trans  &trans  &trans
&trans              &bt BT_DISC 0    &bt BT_DISC 1   &bt BT_DISC 2  &bt BT_DISC 3     &bt BT_DISC 4                &trans  &trans  &trans  &trans      &trans          &trans  &trans  &trans  &trans
&trans              &rgb_ug RGB_OFF  &rgb_ug RGB_ON  &trans         &kp INT_MUHENKAN  &trans         &bt BT_CLR            &trans          &trans      &kp INT_HENKAN  &trans  &trans  &trans  &trans
                                                     &trans         &trans            &trans                                               &trans      &trans          &trans
            >;

            sensor-bindings = <&rgb_encoder>;
        };
    };
};
